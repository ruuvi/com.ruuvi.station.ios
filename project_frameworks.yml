APP_NAME: &APP_NAME frameworks
DEVELOPMENT_TEAM: &DEVELOPMENT_TEAM 4MUYJ4YYH4
BUNDLE_ID_PREFIX: &BUNDLE_ID_PREFIX com.ruuvi

attributes:
  ORGANIZATIONNAME: Ruuvi Innovations Oy

settings:
  base:
    CURRENT_PROJECT_VERSION: 420
    MARKETING_VERSION: "2.5.0"
    DEVELOPMENT_TEAM: *DEVELOPMENT_TEAM

name: *APP_NAME

options:
  bundleIdPrefix: *BUNDLE_ID_PREFIX
  developmentLanguage: en
  deploymentTarget:
    iOS: 14.0

targetTemplates:
  Framework:
    name: "${target_name}"
    type: framework
    platform: iOS
    info:
      path: Packages/${target_name}/Info.plist
      properties:
        CFBundleShortVersionString: "$(MARKETING_VERSION)"
    sources:
    - path: Packages/${target_name}
      excludes:
      - target.yml
      - Info.plist
      - .swiftpm
      - Package.swift
      - Package.resolved
      - .gitignore
      - README.md
      - "*.podspec"
      - Tests
    settings:
      base:
        DEVELOPMENT_TEAM: *DEVELOPMENT_TEAM
        TARGETED_DEVICE_FAMILY: 1,2
        SUPPORTS_MAC_DESIGNED_FOR_IPHONE_IPAD: true
        PRODUCT_BUNDLE_IDENTIFIER: com.ruuvi.station.${target_name}
        PRODUCT_NAME: "${target_name}"
        CFBundlePackageType: $(PRODUCT_BUNDLE_PACKAGE_TYPE)
        CFBundleShortVersionString: "$(MARKETING_VERSION)"
        CFBundleVersion: $(CURRENT_PROJECT_VERSION)
        MERGEABLE_LIBRARY: true
  Module:
    name: "${target_name}"
    type: framework
    platform: iOS
    info:
      path: Modules/${target_name}/Info.plist
      properties:
        CFBundleShortVersionString: "$(MARKETING_VERSION)"
    sources:
    - path: Modules/${target_name}
      excludes:
      - target.yml
      - Info.plist
      - .swiftpm
      - Package.swift
      - Package.resolved
      - .gitignore
      - README.md
      - "*.podspec"
      - Tests
    settings:
      base:
        DEVELOPMENT_TEAM: *DEVELOPMENT_TEAM
        TARGETED_DEVICE_FAMILY: 1,2
        SUPPORTS_MAC_DESIGNED_FOR_IPHONE_IPAD: true
        PRODUCT_BUNDLE_IDENTIFIER: com.ruuvi.station.${target_name}
        PRODUCT_NAME: "${target_name}"
        CFBundlePackageType: $(PRODUCT_BUNDLE_PACKAGE_TYPE)
        CFBundleShortVersionString: "$(MARKETING_VERSION)"
        CFBundleVersion: $(CURRENT_PROJECT_VERSION)
        MERGEABLE_LIBRARY: true
  CommonFramework:
    name: "${target_name}"
    type: framework
    platform: iOS
    info:
      path: Common/${target_name}/Info.plist
      properties:
        CFBundleShortVersionString: "$(MARKETING_VERSION)"
    sources:
    - path: Common/${target_name}
      excludes:
      - target.yml
      - Info.plist
      - .swiftpm
      - Package.swift
      - Package.resolved
      - .gitignore
      - README.md
      - "*.podspec"
      - Tests
    settings:
      base:
        DEVELOPMENT_TEAM: *DEVELOPMENT_TEAM
        TARGETED_DEVICE_FAMILY: 1,2
        SUPPORTS_MAC_DESIGNED_FOR_IPHONE_IPAD: true
        PRODUCT_BUNDLE_IDENTIFIER: com.ruuvi.station.${target_name}
        PRODUCT_NAME: "${target_name}"
        CFBundlePackageType: $(PRODUCT_BUNDLE_PACKAGE_TYPE)
        CFBundleShortVersionString: "$(MARKETING_VERSION)"
        CFBundleVersion: $(CURRENT_PROJECT_VERSION)
        MERGEABLE_LIBRARY: true

packages:
  BTKit:
    url: https://github.com/ruuvi/BTKit
    version: 0.4.3
  Charts:
    url: https://github.com/danielgindi/Charts
    from: 4.1.0
  LightRoute:
    url: https://github.com/rinat-enikeev/LightRoute
    from: 2.2.2
  Swinject: 
    url: https://github.com/Swinject/Swinject
    from: 2.8.3
  Firebase: 
    url: https://github.com/firebase/firebase-ios-sdk
    from: 10.18.0
  RangeSeekSlider:
    url: https://github.com/rinat-enikeev/RangeSeekSlider
    from: 1.8.2
  GestureInstructions:
    url: https://github.com/rinat-enikeev/GestureInstructions
    from: 0.0.2
  Humidity:
    url: https://github.com/rinat-enikeev/Humidity
    from: 0.1.5
  Future:
    url: https://github.com/kean/Future
    from: 1.3.0
  NordicDFU:
    url: https://github.com/NordicSemiconductor/IOS-Pods-DFU-Library
    from: 4.10.3
  KeychainAccess: 
    url: https://github.com/kishikawakatsumi/KeychainAccess
    from: 4.2.1
  Realm: 
    url: https://github.com/realm/realm-cocoa
    from: 10.8.0
  GRDB: 
    url: https://github.com/groue/GRDB.swift
    from: 4.14.0

include:
- Packages/RuuviAnalytics/target.yml
- Packages/RuuviCloud/target.yml
- Packages/RuuviContext/target.yml
- Packages/RuuviCore/target.yml
- Packages/RuuviDaemon/target.yml
- Packages/RuuviDFU/target.yml
- Packages/RuuviLocation/target.yml
- Packages/RuuviLocal/target.yml
- Packages/RuuviMigration/target.yml
- Packages/RuuviNotification/target.yml
- Packages/RuuviNotifier/target.yml
- Packages/RuuviOntology/target.yml
- Packages/RuuviPersistence/target.yml
- Packages/RuuviPool/target.yml
- Packages/RuuviReactor/target.yml
- Packages/RuuviRepository/target.yml
- Packages/RuuviService/target.yml
- Packages/RuuviStorage/target.yml
- Packages/RuuviUser/target.yml
- Packages/RuuviVirtual/target.yml
- Common/RuuviPresenters/target.yml
- Common/RuuviLocalization/target.yml
- Modules/RuuviDiscover/target.yml
- Modules/RuuviLocationPicker/target.yml
- Modules/RuuviOnboard/target.yml
- widget_frameworks.yml
- pnservice.yml
- intents_frameworks.yml

targets:
  station:
    type: application
    platform: iOS
    sources:
      - path: station
      - path: ruuvi_widgets.entitlements
      - path: station_intents.entitlements
      - path: pnservice.entitlements
    dependencies:
      - target: "station.widgets"
      - target: "station.intents"
      - target: "station.pnservice"
      - package: BTKit
      - package: Charts
      - package: GRDB
      - package: LightRoute
      - package: Swinject
      - package: RangeSeekSlider
      - package: NordicDFU
      - package: GestureInstructions
      - package: Firebase
        product: FirebaseMessaging
      - package: Firebase
        product: FirebaseRemoteConfig
      - package: KeychainAccess
      - package: Humidity
      - package: Future
      - package: Realm
      - package: Realm
        product: RealmSwift
      - target: RuuviAnalytics
      - target: RuuviCloud
      - target: RuuviContext
      - target: RuuviCore
      - target: RuuviDaemon
      - target: RuuviDFU
      - target: RuuviLocation
      - target: RuuviLocal
      - target: RuuviMigration
      - target: RuuviNotification
      - target: RuuviNotifier
      - target: RuuviOntology
      - target: RuuviPersistence
      - target: RuuviPool
      - target: RuuviReactor
      - target: RuuviRepository
      - target: RuuviService
      - target: RuuviStorage
      - target: RuuviUser
      - target: RuuviVirtual
      - target: RuuviPresenters
      - target: RuuviDiscover
      - target: RuuviLocationPicker
      - target: RuuviOnboard
      - target: RuuviLocalization
    info:
      path: station/Resources/Plists/Info.plist
      properties:
        CFBundleDisplayName: Ruuvi Station
        CFBundlePackageType: $(PRODUCT_BUNDLE_PACKAGE_TYPE)
        CFBundleShortVersionString: "$(MARKETING_VERSION)"
        CFBundleVersion: $(CURRENT_PROJECT_VERSION)
        UISupportedInterfaceOrientations: [UIInterfaceOrientationLandscapeLeft, UIInterfaceOrientationLandscapeRight, UIInterfaceOrientationPortrait]
        UILaunchStoryboardName: LaunchScreen
        BGTaskSchedulerPermittedIdentifiers: [com.ruuvi.station.BackgroundTaskServiceiOS13.webTagRefresh, com.ruuvi.station.BackgroundProcessServiceiOS13.dataPruning]
        FirebaseMessagingAutoInitEnabled: false
        LSApplicationQueriesSchemes: [https, http, mailto]
        LSRequiresIPhoneOS: true
        NFCReaderUsageDescription: Allows user to claim a RuuviTag using NFC when the user has physical access to the sensor
        NSBluetoothAlwaysUsageDescription: The app uses Bluetooth LE to read data from Ruuvi Sensors
        NSBluetoothPeripheralUsageDescription: The app uses Bluetooth LE to read data from RuuviTag sensors.
        NSCameraUsageDescription: Ruuvi Station needs to access your camera in order to be able to capture photos and use them as sensor background.
        NSLocationAlwaysAndWhenInUseUsageDescription: Ruuvi Station needs to access your location in order to determine your position and show weather parameters for you live location.
        NSLocationAlwaysUsageDescription: Ruuvi Station needs to access your location while being in background in order to pull data for Virtual Sensors for your current location and display alerts.
        NSLocationUsageDescription: Ruuvi Station needs to access your location in order to determine your position and show weather parameters for you live location.
        NSLocationWhenInUseUsageDescription: Ruuvi Station needs to access your location in order to determine your position and show weather parameters for you live location.
        NSPhotoLibraryUsageDescription: Ruuvi Station needs to access your camera roll to enable selecting the background for the sensor.
        NSUserActivityTypes: [RuuviTagSelectionIntent]
        UIAppFonts: [Oswald-Bold.ttf,Oswald-ExtraLight.ttf,Muli-Regular.ttf,Muli-Bold.ttf,Muli-SemiBoldItalic.ttf,Muli-ExtraBold.ttf,Montserrat-Bold.ttf,Montserrat-Regular.ttf,Montserrat-ExtraBold.ttf]
        UIBackgroundModes: [bluetooth-central, processing, remote-notification]
        UIRequiredDeviceCapabilities: [armv7]
        UIRequiresFullScreen: true
        UIStatusBarStyle: UIStatusBarStyleLightContent
        UISupportedInterfaceOrientations~ipad: [UIInterfaceOrientationLandscapeLeft, UIInterfaceOrientationLandscapeRight,UIInterfaceOrientationPortrait,  UIInterfaceOrientationPortraitUpsideDown]
        UIViewControllerBasedStatusBarAppearance: true
    settings:
      base:
        MERGED_BINARY_TYPE: "manual"
        TARGETED_DEVICE_FAMILY: 1,2
        SUPPORTS_MAC_DESIGNED_FOR_IPHONE_IPAD: true
        CODE_SIGN_ENTITLEMENTS: station/station.entitlements
    preBuildScripts:
      - path: scripts/build/generate_l10n.sh
        name: Generate L10N
        inputFiles:
          - $(SRCROOT)/station.localization/station.localization.json
        outputFiles:
          - $(SRCROOT)/station/Resources/Strings/en.lproj/Localizable.strings
          - $(SRCROOT)/station/Resources/Strings/sv.lproj/Localizable.strings
          - $(SRCROOT)/station/Resources/Strings/ru.lproj/Localizable.strings
          - $(SRCROOT)/station/Resources/Strings/fi.lproj/Localizable.strings
          - $(SRCROOT)/station/Resources/Strings/fr.lproj/Localizable.strings
          - $(SRCROOT)/station/Resources/Strings/de.lproj/Localizable.strings
    postBuildScripts:
      - path: scripts/build/load_keystore.sh
        name: Load Keystore
        inputFiles:
          - $(SRCROOT)/station/Classes/Networking/Assembly/Networking.plist
          - $(SRCROOT)/station/Resources/Plists/GoogleService-Info.plist
        runOnlyWhenInstalling: true
        basedOnDependencyAnalysis: false
schemes:
  station:
    build:
      targets:
        station: all